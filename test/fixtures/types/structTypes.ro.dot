digraph Document {
  node [shape=box,fixedsize=shape fontsize=10]
  1 [label="Name: i32\nLiteralTypeResolver\n⟨i32⟩"];
  2 [label="Name: f32\nLiteralTypeResolver\n⟨f32⟩"];
  3 [label="Name: boolean\nLiteralTypeResolver\n⟨boolean⟩"];
  4 [label="Name: Number\nLiteralTypeResolver\n⟨Number⟩"];
  5 [label="StructDeclarationNode\nStructTypeResolver\n⟨Infinity⟩"];
  6 [label="Name: Infinity\nPassThroughTypeResolver\n⟨Infinity⟩"];
  7 [label="StructDeclarationNode\nStructTypeResolver\n⟨NDet⟩"];
  8 [label="Name: NDet\nPassThroughTypeResolver\n⟨NDet⟩"];
  9 [label="StructDeclarationNode\nStructTypeResolver\n⟨Real⟩"];
  10 [label="TypeRef: f32\nTypeReferenceResolver\n⟨f32⟩"];
  11 [label="Name: number\nPassThroughTypeResolver\n⟨f32⟩"];
  12 [label="Name: Real\nPassThroughTypeResolver\n⟨Real⟩"];
  13 [label="StructDeclarationNode\nStructTypeResolver\n⟨Natural⟩"];
  14 [label="TypeRef: i32\nTypeReferenceResolver\n⟨i32⟩"];
  15 [label="Name: number\nPassThroughTypeResolver\n⟨i32⟩"];
  16 [label="Name: Natural\nPassThroughTypeResolver\n⟨Natural⟩"];
  17 [label="StructDeclarationNode\nStructTypeResolver\n⟨Complex⟩"];
  18 [label="TypeRef: f32\nTypeReferenceResolver\n⟨f32⟩"];
  19 [label="Name: real\nPassThroughTypeResolver\n⟨f32⟩"];
  20 [label="TypeRef: f32\nTypeReferenceResolver\n⟨f32⟩"];
  21 [label="Name: imaginary\nPassThroughTypeResolver\n⟨f32⟩"];
  22 [label="Name: Complex\nPassThroughTypeResolver\n⟨Complex⟩"];
  23 [label="FunOverload: isComplex\nOverloadedFunctionTypeResolver\n⟨fun(number: Number) -> boolean⟩"];
  24 [label="FunDirective: isComplex\nPassThroughTypeResolver\n⟨fun(number: Number) -> boolean⟩"];
  25 [label="FunNode: isComplex\nFunctionTypeResolver\n⟨fun(number: Number) -> boolean⟩"];
  26 [label="TypeRef: Number\nTypeReferenceResolver\n⟨Number⟩"];
  27 [label="Name: number\nPassThroughTypeResolver\n⟨Number⟩"];
  28 [label="TypeRef: boolean\nTypeReferenceResolver\n⟨boolean⟩"];
  29 [label="Name: isComplex\nPassThroughTypeResolver\n⟨fun(number: Number) -> boolean⟩"];
  30 [label="Name: isComplex\nPassThroughTypeResolver\n⟨fun(number: Number) -> boolean⟩"];
  31 [label="FunOverload: main\nOverloadedFunctionTypeResolver\n⟨fun() -> boolean⟩"];
  32 [label="FunDirective: main\nPassThroughTypeResolver\n⟨fun() -> boolean⟩"];
  33 [label="FunNode: main\nFunctionTypeResolver\n⟨boolean⟩"];
  34 [label="Name: main\nPassThroughTypeResolver\n⟨fun() -> boolean⟩"];
  35 [label="Name: main\nPassThroughTypeResolver\n⟨fun() -> boolean⟩"];
  subgraph cluster0 {
    node [style=filled, fillcolor=grey];
    36 [label="BlockNode\nBlockTypeResolver\n⟨boolean⟩"];
    37 [label="FunctionCallNode\nFunctionCallResolver\n⟨boolean⟩"];
    38 [label="Var: isComplex\nVariableReferenceResolver\n⟨fun(number: Number) -> boolean⟩"];
    39 [label="Var: Infinity\nVariableReferenceResolver\n⟨Infinity⟩"];
    40 [label="FunctionCallNode\nFunctionCallResolver\n⟨boolean⟩"];
    41 [label="Var: isComplex\nVariableReferenceResolver\n⟨fun(number: Number) -> boolean⟩"];
    42 [label="FunctionCallNode\nFunctionCallResolver\n⟨Real⟩"];
    43 [label="Var: Real\nVariableReferenceResolver\n⟨Real⟩"];
    44 [label="Float: 0.00000\nPassThroughTypeResolver\n⟨f32⟩"];
    45 [label="FunctionCallNode\nFunctionCallResolver\n⟨boolean⟩"];
    46 [label="Var: isComplex\nVariableReferenceResolver\n⟨fun(number: Number) -> boolean⟩"];
    47 [label="FunctionCallNode\nFunctionCallResolver\n⟨Natural⟩"];
    48 [label="Var: Natural\nVariableReferenceResolver\n⟨Natural⟩"];
    49 [label="Int: 123\nPassThroughTypeResolver\n⟨i32⟩"];
    50 [label="FunctionCallNode\nFunctionCallResolver\n⟨boolean⟩"];
    51 [label="Var: isComplex\nVariableReferenceResolver\n⟨fun(number: Number) -> boolean⟩"];
    52 [label="FunctionCallNode\nFunctionCallResolver\n⟨Complex⟩"];
    53 [label="Var: Complex\nVariableReferenceResolver\n⟨Complex⟩"];
    54 [label="Float: 0.00000\nPassThroughTypeResolver\n⟨f32⟩"];
    55 [label="Float: 99.10000\nPassThroughTypeResolver\n⟨f32⟩"];
    56 [label="FunNode: main\nPassThroughTypeResolver\n⟨boolean⟩"];
    36 -> 56[taillabel="boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    37 -> 36[taillabel="boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    38 -> 37[taillabel="fun(number: Number) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    39 -> 37[taillabel="Infinity" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    40 -> 36[taillabel="boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    41 -> 40[taillabel="fun(number: Number) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    42 -> 40[taillabel="Real" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    43 -> 42[taillabel="Real" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    44 -> 42[taillabel="f32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    45 -> 36[taillabel="boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    46 -> 45[taillabel="fun(number: Number) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    47 -> 45[taillabel="Natural" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    48 -> 47[taillabel="Natural" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    49 -> 47[taillabel="i32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    50 -> 36[taillabel="boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    51 -> 50[taillabel="fun(number: Number) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    52 -> 50[taillabel="Complex" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    53 -> 52[taillabel="Complex" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    54 -> 52[taillabel="f32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    55 -> 52[taillabel="f32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  label = "main()";
}
  subgraph cluster1 {
    node [style=filled, fillcolor=grey];
    57 [label="Name: number\nLiteralTypeResolver\n⟨Number⟩"];
    58 [label="PatternMatcherNode\nPatternMatcherTypeResolver", color=red];
    59 [label="Var: number\nVariableReferenceResolver\n⟨Number⟩"];
    60 [label="MatchCaseIsNode\nMatchCaseIsTypeResolver\n⟨boolean⟩"];
    61 [label="BooleanLiteralfalse\nPassThroughTypeResolver\n⟨boolean⟩"];
    62 [label="MatchCaseIsNode\nMatchCaseIsTypeResolver\n⟨boolean⟩"];
    63 [label="BooleanLiteralfalse\nPassThroughTypeResolver\n⟨boolean⟩"];
    64 [label="MatchCaseIsNode\nMatchCaseIsTypeResolver", color=red];
    65 [label="Name: imaginary\nStructDeconstructorTypeResolver", color=red];
    66 [label="BinaryExpressionNode'!='\nBinaryOpTypeResolver", color=red];
    67 [label="Var: imaginary\nVariableReferenceResolver", color=red];
    68 [label="Float: 0.00000\nPassThroughTypeResolver\n⟨f32⟩"];
    69 [label="MatchDefaultNode\nMatchDefaultTypeResolver\n⟨boolean⟩"];
    70 [label="BooleanLiteralfalse\nPassThroughTypeResolver\n⟨boolean⟩"];
    71 [label="FunNode: isComplex\nPassThroughTypeResolver\n⟨fun(number: Number) -> boolean⟩"];
    72 [label="TypeRef: boolean\nTypeReferenceResolver\n⟨boolean⟩"];
    57 -> 59[taillabel="Number" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    58 -> 71[taillabel="Not Defined" labeldistance="1" fontname="times  italic" fontsize = 10 color="blue" ];
    59 -> 58[taillabel="Number" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    59 -> 60[taillabel="Number" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    59 -> 62[taillabel="Number" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    59 -> 64[taillabel="Number" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    59 -> 69[taillabel="Number" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    60 -> 58[taillabel="boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    61 -> 60[taillabel="boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    62 -> 58[taillabel="boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    63 -> 62[taillabel="boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    64 -> 65[taillabel="Not Defined" labeldistance="1" fontname="times  italic" fontsize = 10 color="blue" ];
    64 -> 58[taillabel="[MATCH_EXPRESSION]" labeldistance="1" fontname="times  italic" fontsize = 10 color="blue" ];
    65 -> 67[taillabel="[NAME]" labeldistance="1" fontname="times  italic" fontsize = 10 color="blue" ];
    66 -> 64[taillabel="[RHS]" labeldistance="1" fontname="times  italic" fontsize = 10 color="blue" ];
    67 -> 66[taillabel="[LHS]" labeldistance="1" fontname="times  italic" fontsize = 10 color="blue" ];
    68 -> 66[taillabel="f32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    69 -> 58[taillabel="boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    70 -> 69[taillabel="boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  label = "isComplex(Number)";
}
  1 -> 14[taillabel="i32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  1 -> 49[taillabel="i32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  2 -> 10[taillabel="f32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  2 -> 18[taillabel="f32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  2 -> 20[taillabel="f32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  2 -> 44[taillabel="f32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  2 -> 54[taillabel="f32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  2 -> 55[taillabel="f32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  2 -> 68[taillabel="f32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  3 -> 28[taillabel="boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  3 -> 61[taillabel="boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  3 -> 63[taillabel="boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  3 -> 70[taillabel="boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  3 -> 72[taillabel="boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  4 -> 5[taillabel="Number" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  4 -> 7[taillabel="Number" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  4 -> 9[taillabel="Number" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  4 -> 13[taillabel="Number" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  4 -> 17[taillabel="Number" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  4 -> 26[taillabel="Number" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  5 -> 6[taillabel="Infinity" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  6 -> 39[taillabel="Infinity" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  7 -> 8[taillabel="NDet" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  9 -> 12[taillabel="Real" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  10 -> 11[taillabel="f32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  11 -> 9[taillabel="f32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  12 -> 43[taillabel="Real" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  13 -> 16[taillabel="Natural" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  14 -> 15[taillabel="i32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  15 -> 13[taillabel="i32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  16 -> 48[taillabel="Natural" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  17 -> 22[taillabel="Complex" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  18 -> 19[taillabel="f32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  19 -> 17[taillabel="f32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  20 -> 21[taillabel="f32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  21 -> 17[taillabel="f32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  22 -> 53[taillabel="Complex" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  23 -> 30[taillabel="fun(number: Number) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  24 -> 23[taillabel="fun(number: Number) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  25 -> 29[taillabel="fun(number: Number) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  25 -> 24[taillabel="fun(number: Number) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  26 -> 27[taillabel="Number" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  27 -> 25[taillabel="Number" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  28 -> 25[taillabel="boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  30 -> 38[taillabel="fun(number: Number) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  30 -> 41[taillabel="fun(number: Number) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  30 -> 46[taillabel="fun(number: Number) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  30 -> 51[taillabel="fun(number: Number) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  31 -> 35[taillabel="fun() -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  32 -> 31[taillabel="fun() -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  33 -> 34[taillabel="fun() -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  33 -> 32[taillabel="fun() -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  label="";
}
