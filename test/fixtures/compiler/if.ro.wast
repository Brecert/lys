(module
  (memory 0 1)
  (export "gcd" (func $test::gcd))
  (export "test" (func $test::test))
  (export "ifWithoutElse" (func $test::ifWithoutElse))
  (func $test::gcd (param $x i32) (param $y i32) (result i32)
    (if $a_wild_if (result i32) (i32.gt_s (get_local $x) (get_local $y))
      (then
        (call $test::gcd (i32.sub (get_local $x) (get_local $y)) (get_local $y))
      )
      (else
        (if $a_wild_if (result i32) (i32.lt_s (get_local $x) (get_local $y))
            (then
              (call $test::gcd (get_local $x) (i32.sub (get_local $y) (get_local $x)))
            )
            (else
              (get_local $x)
            )
          )
      )
    )
  )
  (func $test::test (result i32)
    (call $test::gcd (i32.const 119) (i32.const 7))
  )
  (func $test::ifWithoutElse (param $x i32) (result i32)
    (local $a i32)
    (block $unknown_block_1 (result i32)
      (set_local $a (i32.const 1))
      (if $a_wild_if (i32.eq (get_local $x) (i32.const 1))
          (then
            (block $unknown_block_2
                (set_local $a (i32.const 3))
              )
          )
          (else)
        )
      (get_local $a)
    )
  )
)
